version: 1.0.{build}

configuration:
    - Release

os: Visual Studio 2015
image: Visual Studio 2015

platform:
    - x86
    - x64

environment:
    TWINE_PASSWORD:
        secure: l6EOt89SzIItVoVNEMhf/fhrJ0o+HVNn0vQmE0Opt9Y=
    matrix:
        - PYTHON: C:\Python35
          PYTHON_VERSION: 35
        - PYTHON: C:\Python36
          PYTHON_VERSION: 36
        - PYTHON: C:\Python37
          PYTHON_VERSION: 37
        - PYTHON: C:\Python38
          PYTHON_VERSION: 38

matrix:
    fast_finish: true

install:
    - IF DEFINED PYTHON (IF "%platform%" == "x64" SET PYTHON=%PYTHON%-x64)
    - IF DEFINED PYTHON SET PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%
    - IF DEFINED PYTHON pip install --upgrade
        numpy
        pytest
        setuptools
        setuptools_scm
        pybind11
        hypothesis
        twine
        wheel
        git+https://github.com/jokva/scikit-build

before_build:
    - set generator="Visual Studio 14 2015"
    - IF "%platform%" == "x64" set generator="Visual Studio 14 2015 Win64"
    - git submodule update --init --recursive
    - git fetch --tags
    - vcpkg integrate install
    - vcpkg install fmt:%platform%-windows
    - git clone https://github.com/equinor/layered-file-protocols.git
    - ps: mkdir layered-file-protocols/build
    - ps: pushd layered-file-protocols/build
    - cmake -G %generator%
            -DCMAKE_CXX_FLAGS="/D_CRT_SECURE_NO_WARNINGS"
            -DLFP_FMT_HEADER_ONLY=ON
            -DCMAKE_BUILD_TYPE=Release
            -DCMAKE_TOOLCHAIN_FILE=C:/Tools/vcpkg/scripts/buildsystems/vcpkg.cmake ..
    - cmake --build .  --config %configuration% --target install
    - set install-dir=C:/Program Files
    - IF "%platform%" == "x86" set install-dir=C:/Program Files (x86)
    - set lfp_DIR=%install-dir%/layered-file-protocols/share/lfp/cmake
    - ps: popd

build_script:
    - ps: |
          mkdir build
          pushd build
    - cmake %APPVEYOR_BUILD_FOLDER%
            -G %generator%
            -DCMAKE_CXX_FLAGS="/D_CRT_SECURE_NO_WARNINGS"
    - cmake --build .  --config %configuration%
    - ctest --build-config %configuration% --output-on-failure
    - ps: popd
    - ps: pushd python
    - git describe
    - IF DEFINED PYTHON python setup.py bdist_wheel -G %generator%
    - ps: popd

before_deploy:
    - ps: pushd python

after_deploy:
    - ps: popd

deploy_script:
    - ps: |
          Write-Host "TAG: $env:APPVEYOR_REPO_TAG"
          If ($env:APPVEYOR_REPO_TAG -eq "false") { return }

          Write-Host "Uploading wheels to pypi"
          Invoke-Expression "twine upload -u statoil-travis --skip-existing dist/*"
          If ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }
