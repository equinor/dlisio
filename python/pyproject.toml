[build-system]
requires = [
    "setuptools >= 40",
    "scikit-build",
    "wheel",
    "pybind11",
    "pytest-runner",
]

[tool.cibuildwheel]
before-all = [
    """curl                                                             \
        -L https://github.com/fmtlib/fmt/archive/refs/tags/7.1.3.tar.gz \
        -o fmt-7.1.3.tar.gz                                             \
    """,
    "tar xf fmt-7.1.3.tar.gz",
    """cmake                \
        -S fmt-7.1.3        \
        -B fmt-7.1.3/build  \
        -DFMT_TEST=OFF      \
        -DFMT_DOC=OFF       \
    """,
    """cmake                    \
        --build fmt-7.1.3/build \
        --target install        \
        --config Release        \
    """,
    """git clone https://github.com/equinor/layered-file-protocols.git""",
    """cmake                                    \
        -S layered-file-protocols               \
        -B layered-file-protocols/build         \
        -DCMAKE_POSITION_INDEPENDENT_CODE=ON    \
        -DLFP_FMT_HEADER_ONLY=ON                \
        -DBUILD_TESTING=OFF                     \
    """,
    """cmake                                    \
        --build layered-file-protocols/build    \
        --target install                        \
        --config Release                        \
    """,
    """curl                                                                 \
        -L https://github.com/mpark/variant/archive/refs/tags/v1.4.0.tar.gz \ 
        -o variant-1.4.0.tar.gz                                             \
    """,
    "tar xf variant-1.4.0.tar.gz",
    """cmake                    \
        -S variant-1.4.0        \
        -B variant-1.4.0/build  \
    """,
    """cmake                        \
        --build variant-1.4.0/build \
        --target install            \
        --config Release            \
    """,
]

before-build = [
    """cmake                                 \
        -S .                                 \
        -B build                             \
        -DCMAKE_BUILD_TYPE=Release           \
        -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
        -DBUILD_TESTING=OFF                  \
        -DBUILD_PYTHON=OFF                   \
    """,
    """cmake             \
        --build build    \
        --parallel       \
        --target install \
        --config Release \
    """,
]

test-requires = "pytest"

# Cibuildwheel doesn't run tests from the project directory. This is to ensure
# the wheel is imported by the tests, and not the source copy. Normally, one
# would run pytest using the cibw project variable like so: 'pytest
# {project}/tests'.  This doesn't work for us however, because our tests use
# relative paths to our test data folder python/data. The workaround is to copy
# out the tests/ and data/ directories to the current folder. This has to be
# done in 'test-command' and not in 'before-test' because there is no guarantee
# they are run from the same directory.
test-command = [
    """python {project}/.github/utils.py copy --src {package}/tests --dst testdir/tests""",
    """python {project}/.github/utils.py copy --src {package}/data  --dst testdir/data""",
    """cd testdir""",
    """pytest tests""",
    """python {project}/.github/utils.py remove --paths tests data""",
]

[tool.cibuildwheel.linux]
manylinux-x86_64-image = "manylinux2010"

[tool.cibuildwheel.macos]
environment = { CXXFLAGS="-L/usr/local/lib" }
